{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","About","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9c634c68.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n            }    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => {\r\n            this.setState(state => reducer(state, action))\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await axios\r\n           .get('http://jsonplaceholder.typicode.com/users'); \r\n\r\n        this.setState({contacts: res.data})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>    \r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { Consumer } from '../../context'\r\nimport axios from 'axios'\r\n\r\nclass Contact extends Component {\r\n\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios\r\n        .delete(`http://jsonplaceholder.typicode.com/users/${id}`);\r\n        dispatch({type: 'DELETE_CONTACT', payload: id});\r\n    } catch(e) {\r\n        dispatch({type: 'DELETE_CONTACT', payload: id});\r\n      }\r\n\r\n  };\r\n\r\n  render() {\r\n    const {id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => { \r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n\r\n              <h4>{name}{ ' ' }  \r\n                <i \r\n                  onClick={ \r\n                    () => this.setState({ showContactInfo: !this.state.showContactInfo }) \r\n                  } \r\n                  className=\"fas fa-sort-down\" \r\n                  style={{cursor: 'pointer'}}></i>\r\n                  <i className=\"fas fa-times\" style={{\r\n                    cursor: 'pointer',\r\n                    float: 'right',\r\n                    color: 'red'\r\n                  }} \r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\r\n                  \r\n                  <Link to={`contact/edit/${id}`} >\r\n                    <i \r\n                      className=\"fas fa-pencil-alt\"\r\n                      style={{\r\n                        cursor: 'pointer',\r\n                        float: 'right',\r\n                        color: 'green',\r\n                        marginRight: '1rem'\r\n                      }}\r\n                    ></i>\r\n                  </Link>\r\n\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>) : null}\r\n\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired \r\n}\r\n\r\nexport default Contact","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\nimport { Consumer } from '../../context'\r\n\r\nclass Contacts extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n        <Consumer>\r\n            {value => {\r\n                const { contacts } = value;\r\n                return (\r\n                    <React.Fragment>\r\n                        <h1 className=\"display-4 mb-2\">\r\n                            <span className=\"text-danger\">Contact</span> List\r\n                        </h1>\r\n                        {contacts.map(contact => (\r\n                            <Contact \r\n                                key={contact.id}\r\n                                contact={contact} \r\n                            />\r\n                        ))}\r\n                    </React.Fragment>\r\n                )\r\n            }}\r\n        </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contacts\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n  const { branding } = props;  \r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\"><Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i> Home</Link></li>\r\n            <li className=\"nav-item\"><Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i> Add</Link></li>\r\n            <li className=\"nav-item\"><Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i> About</Link></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <div className=\"text-secondary\">Version 1.0</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n  return (\r\n    <div>\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input \r\n                type={type}\r\n                name={name} \r\n                className={classnames('form-control form-control-lg', {\r\n                    'is-invalid': error\r\n                })}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n                />\r\n                {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n};\r\n\r\nexport default TextInputGroup\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nimport axios from 'axios'\r\n\r\nclass AddContact extends Component {\r\n\r\n  state = {\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n  } \r\n\r\n  onSubmit = async (dispatch, e) => {\r\n      e.preventDefault(this.state);\r\n      \r\n      const { name, email, phone } = this.state;  \r\n\r\n      //Check For Errors\r\n      if(name === '') {\r\n          this.setState({errors: { name: 'Name is required' }});\r\n          return;\r\n      } \r\n        \r\n      if(email === '') {\r\n          this.setState({errors: { email: 'Email is required' }});\r\n          return;\r\n      }   \r\n\r\n      if(phone === '') {\r\n          this.setState({errors: { phone: 'Phone is required' }});\r\n          return;\r\n      }   \r\n\r\n      const newContact = {\r\n          name,\r\n          email,\r\n          phone,\r\n      };\r\n\r\n     const res = await axios.post('http://jsonplaceholder.typicode.com/users', newContact)\r\n        \r\n\r\n     dispatch({type: 'ADD_CONTACT', payload: res.data})\r\n\r\n     \r\n      \r\n      //Clear inputs\r\n      this.setState({\r\n          name: '',\r\n          email: '',\r\n          phone: ''\r\n      });\r\n\r\n      this.props.history.push('/');\r\n\r\n  }\r\n  \r\n  onChange = (e) => this.setState({[e.target.name]: e.target.value})\r\n\r\n  render() {\r\n      const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n        <Consumer>\r\n            {value => {\r\n                const { dispatch } = value;\r\n                return (\r\n                    <div className=\"crad mb-3\">\r\n                    <h1 className=\"card-header\">Add Contact</h1>\r\n                    <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                        <TextInputGroup \r\n                            label=\"Name\"\r\n                            name=\"name\"\r\n                            placeholder=\"Enter Name\"\r\n                            value={name}\r\n                            onChange={this.onChange}\r\n                            error={errors.name}\r\n                        />\r\n                        <TextInputGroup \r\n                            label=\"Email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            placeholder=\"Enter Email\"\r\n                            value={email}\r\n                            onChange={this.onChange}\r\n                            error={errors.email}\r\n                        />\r\n                        <TextInputGroup \r\n                            label=\"Phone\"\r\n                            name=\"phone\"\r\n                            placeholder=\"Enter Phone\"\r\n                            value={phone}\r\n                            onChange={this.onChange}\r\n                            error={errors.phone}\r\n                        />\r\n                       \r\n                        <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\"/>\r\n                    </form>\r\n                </div>\r\n                )\r\n            }}\r\n        </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddContact\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nimport axios from 'axios'\r\n\r\nclass EditContact extends Component {\r\n\r\n  state = {\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n  };\r\n  \r\n  async componentDidMount() {\r\n      const { id } = this.props.match.params;\r\n      const res = await axios.get(`http://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n      const contact = res.data;\r\n\r\n      this.setState({\r\n          name: contact.name,\r\n          email: contact.email,\r\n          phone: contact.phone\r\n      })\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n      e.preventDefault(this.state);\r\n      \r\n      const { name, email, phone } = this.state;  \r\n\r\n      //Check For Errors\r\n      if(name === '') {\r\n          this.setState({errors: { name: 'Name is required' }});\r\n          return;\r\n      } \r\n        \r\n      if(email === '') {\r\n          this.setState({errors: { email: 'Email is required' }});\r\n          return;\r\n      }   \r\n\r\n      if(phone === '') {\r\n          this.setState({errors: { phone: 'Phone is required' }});\r\n          return;\r\n      }  \r\n\r\n      const updContact = {\r\n          name,\r\n          email,\r\n          phone\r\n      }\r\n      \r\n      const { id } = this.props.match.params;\r\n\r\n      const res = await axios.put(`http://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n      dispatch({type: 'UPDATE_CONTACT', payload: res.data});\r\n\r\n      //Clear inputs\r\n      this.setState({\r\n          name: '',\r\n          email: '',\r\n          phone: ''\r\n      });\r\n\r\n      this.props.history.push('/');\r\n\r\n  }\r\n  \r\n  onChange = (e) => this.setState({[e.target.name]: e.target.value})\r\n\r\n  render() {\r\n      const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n        <Consumer>\r\n            {value => {\r\n                const { dispatch } = value;\r\n                return (\r\n                    <div className=\"crad mb-3\">\r\n                    <h1 className=\"card-header\">Edit Contact</h1>\r\n                    <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                        <TextInputGroup \r\n                            label=\"Name\"\r\n                            name=\"name\"\r\n                            placeholder=\"Enter Name\"\r\n                            value={name}\r\n                            onChange={this.onChange}\r\n                            error={errors.name}\r\n                        />\r\n                        <TextInputGroup \r\n                            label=\"Email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            placeholder=\"Enter Email\"\r\n                            value={email}\r\n                            onChange={this.onChange}\r\n                            error={errors.email}\r\n                        />\r\n                        <TextInputGroup \r\n                            label=\"Phone\"\r\n                            name=\"phone\"\r\n                            placeholder=\"Enter Phone\"\r\n                            value={phone}\r\n                            onChange={this.onChange}\r\n                            error={errors.phone}\r\n                        />\r\n                       \r\n                        <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\"/>\r\n                    </form>\r\n                </div>\r\n                )\r\n            }}\r\n        </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditContact\r\n","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n  state = {\r\n      title: '',\r\n      body: ''\r\n  };  \r\n \r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n    .then(response => response.json())\r\n    .then(data => this.setState({\r\n        title: data.title,\r\n        body: data.body\r\n    }))\r\n  }  \r\n \r\n//   componentWillMount() {\r\n//       console.log('componentWillMount...');\r\n//   }  \r\n \r\n//   componentDidUpdate() {\r\n//       console.log('componentDidUpdate...');\r\n//   }  \r\n \r\n//   componentWillUpdate() {\r\n//       console.log('componentWillUpdate...');\r\n//   }  \r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n        <div>\r\n          <h1>{title}</h1>\r\n          <p>{body}</p>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Test\r\n","import React, { Component } from 'react'\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom'\nimport Contacts from './components/contacts/Contacts'\nimport Header from './components/layout/Header'\nimport About from './components/pages/About'\nimport AddContact from './components/contacts/AddContact'\nimport EditContact from './components/contacts/EditContact'\nimport NotFound from './components/pages/NotFound'\nimport Test from './components/test/Test'\n\nimport { Provider } from './context'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider> \n        <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>  \n        </div>\n        </Router>\n      </Provider>  \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}